{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "To Create EC2 Instance in AZ3",
  "Parameters": {
    "EC2InstanceType": {
      "Description": "EC2 instance Type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "m1.small"
      ]
    },
    "Network": {
      "Description": "VPC",
      "Type": "AWS::EC2::VPC::Id",
      "ConstraintDescription": "must be one of the existing VPCs"
    },
    "Subnet": {
      "Description": "Subnet to create EC2",
      "Type": "AWS::EC2::Subnet::Id",
      "ConstraintDescription": "must be one of the existing subnets"
    },
    "SecurityKey": {
      "Description": "SSH Key Pair",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "SSHLocation": {
      "Description": "IP range to allow SSH access",
      "Type": "String",
      "ConstraintDescription": "Must be in the form of CIDR",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
	"AMIId": {
	   "Description": "Provide AMI Id of the image",
	   "Type": "String",
	   "Default": "ami-162c2575"
	}
  },
  "Resources": {
    "EC2SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EC2 Security Group",
        "VpcId": {
          "Ref": "Network"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ]
      }
    },
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "EC2InstanceType"
        },
        "ImageId": {"Ref" : "AMIId" },
        "KeyName": {
          "Ref": "SecurityKey"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "True",
            "DeleteOnTermination": "True",
            "SubnetId": {
              "Ref": "Subnet"
            },
            "DeviceIndex" : "0",
            "GroupSet": [
              {
                "Ref": "EC2SG"
              }
            ]
          }
        ]
      }
    }
  },
  "Outputs": {
    "InstanceId": {
      "Value": {
        "Ref": "EC2Instance"
      },
      "Description": "EC2 Instance ID"
    },
    "SecurityGroupId": {
      "Value": {
        "Ref": "EC2SG"
      },
      "Description": "EC2 Security Group"
    }
  }
}