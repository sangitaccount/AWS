{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Template to Create AutoScaling group without load balancer",

  "Parameters": {
    "EC2InstanceType": {
      "Description": "EC2 instance Type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "m1.small"
      ]
    },
    "AMIId": {
      "Description": "Provide AMI Id of the image",
      "Type": "String",
      "Default": "ami-162c2575"
    },
    "SecurityGroups": {
      "Description": "Security Groups to be assigned to EC2 Instances",
      "Type": "List<AWS::EC2::SecurityGroup::GroupName>"
    },
    "PublicORPrivate": {
      "Description": "Should we assign Public IPs to Instances",
      "Type": "String",
      "Default": "False",
      "AllowedValues": [
        "True",
        "False"
      ]
    },
    "SubnetsforAutoScaling": {
      "Description": "Select the subnets where EC2 Instances to be launched",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "HealthCheckWaitTime": {
      "Description": "Time to wait before start checking EC2 health",
      "Type": "Number",
      "Default": 0
    },
    "ScalingWaitTime": {
      "Description": "Amount of Time to wait between trigger related scaling activities",
      "Type": "Number",
      "Default": 180
    }
  },
  "Resources" : {
    "LaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {"Ref": "AMIId"},
        "InstanceType": {"Ref": "EC2InstanceType"},
        "SecurityGroups": {"Ref": "SecurityGroups"},
        "AssociatePublicIpAddress": {"Ref": "PublicORPrivate"}
      }
    },
    "AutoScalingConfiguration": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones" : { "Fn::GetAZs" : ""},
        "LaunchConfigurationName" : { "Ref" : "LaunchConfiguration" },
        "VPCZoneIdentifier": {"Ref": "SubnetsforAutoScaling"},
        "MinSize": 1,
        "DesiredCapacity": 1,
        "MaxSize": 3,
        "HealthCheckGracePeriod": {"Ref": "HealthCheckWaitTime"},
        "TerminationPolicies": ["OldestInstance","OldestLaunchConfiguration"]
      }
    },
    "ScaleUpPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "AutoScalingConfiguration" },
        "Cooldown" : {"Ref": "ScalingWaitTime"},
        "ScalingAdjustment" : "1"
      }
    },
    "CPUAlarmHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "1",
        "Statistic": "Average",
        "Threshold": "90",
        "AlarmDescription": "Alarm if CPU is > 90% for 5 minutes",
        "Period": "300",
        "AlarmActions": [ { "Ref": "ScaleUpPolicy" } ],
        "Namespace": "AWS/EC2",
        "Dimensions": [ {
          "Name": "AutoScalingGroupName",
          "Value": { "Ref": "AutoScalingConfiguration" }
        } ],
        "ComparisonOperator": "GreaterThanThreshold",
        "MetricName": "CPUUtilization"
      }
    },
    "ScaleDownPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "AutoScalingConfiguration" },
        "Cooldown" : {"Ref": "ScalingWaitTime"},
        "ScalingAdjustment" : "-1"
      }
    },
    "CPUAlarmLow": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "1",
        "Statistic": "Average",
        "Threshold": "60",
        "AlarmDescription": "Alarm if CPU is < 60% for 5 minutes",
        "Period": "300",
        "AlarmActions": [ { "Ref": "ScaleDownPolicy" } ],
        "Namespace": "AWS/EC2",
        "Dimensions": [ {
          "Name": "AutoScalingGroupName",
          "Value": { "Ref": "AutoScalingConfiguration" }
        } ],
        "ComparisonOperator": "LessThanThreshold",
        "MetricName": "CPUUtilization"
      }
    }
  }
}